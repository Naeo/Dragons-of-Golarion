'''
This file just contains a set of dictionaries defining how to map
IPA transliterations to other scripts.  Each script should have three
dictionaries:
    SCRIPTNAME_IPA
    SCRIPTNAME_CLEANER
    SCRIPTNAME_KEEPABLE

SCRIPTNAME_IPA defines the mappings of IPA characters to characters
in the script.

SCRIPTNAME_CLEANER defines any mappings from IPA-to-IPA that need to
be done to make the script work with English phonology.  E.g., mapping
a near-high near-back rounded vowel (like in 'book') to a high back rounded
vowel (like in 'blue').  In principle these dictionaries can be left
empty and everything can be done in trhe SCRIPTNAME_IPA dictionary.
However, as a general extensible framework, this lets script-specific
cleaning be done more easily, I find.

SCRIPTNAME_KEEPABLE defines any characters that are okay to keep,
untransliterated.
'''

import subprocess

# A set of common phonemes in English which need mappings.
USUAL_ENGLISH_SOUNDS = [
    'a', 'b', 'd', 'e', 'f', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',
    'p', 'r', 's', 't', 'u', 'v', 'w', 'z', '√¶', '√∞', '≈ã', '…ê', '…ë',
    '…î', '…ô', '…ö', '…õ', '…ú', 'g', '…™', '…π', '…æ', ' É', ' ä', ' å', ' í',
    ' î', 'Àà', 'Àå', 'Àê', 'Ã©', 'Œ∏', '·µª']


AVESTAN_IPA = {
    'eÀê':'ê¨â', 
    'oÀê':'ê¨ã', 
    '…í':'ê¨Ç',
    'g': 'ê¨î',
    ' É': 'ê¨±',
    'aÀê': 'ê¨Å',
    'tÃö':'ê¨ù',
    'r': 'ê¨≠',
    '≈ã ≤': 'ê¨£',
    '…î': 'ê¨ä',
    'uÀê': 'ê¨è',
    'z': 'ê¨∞',
    ' ä':'ê¨é',
    'h': 'ê¨µ',
    '≈ã': 'ê¨ß',
    'm ∞': 'ê¨©',
    'Œ≤': 'ê¨°',
    'mÃ•': 'ê¨©',
    '…≤':'ê¨¶',
    'e': 'ê¨à',
    'j': 'ê¨´',
    '…íÀê': 'ê¨É',
    'd': 'ê¨õ',
    'a': 'ê¨Ä',
    'g ≤':'ê¨ï',
    's': 'ê¨Ø',
    '…ü': 'ê¨ï',
    'b': 'ê¨†',
    'uuÃØ': 'ê¨éê¨é',
    't': 'ê¨ô',
    ' í':'ê¨≤',
    't É': 'ê¨ó',
    'p': 'ê¨û',
    'iÀê': 'ê¨ç',
    'v': 'ê¨¨',
    '…™': 'ê¨å',
    '…ôÀê':'ê¨á',
    '√ß': 'ê¨í',
    'd í': 'ê¨ò',
    'x ∑': 'ê¨ì',
    'f': 'ê¨ü',
    'Œ∏': 'ê¨ö',
    'ij':'ê¨åê¨å',
    'x ≤': 'ê¨í',
    'x': 'ê¨ë',
    '√£': 'ê¨Ö',
    '√∞': 'ê¨ú',
    'm': 'ê¨®',
    'n':'ê¨•',
    '…ô': 'ê¨Ü',
    '≈ã ∑': 'ê¨§',
    ' Ç': 'ê¨¥',
    '…ï': 'ê¨≥',
    'k': 'ê¨ê',
    'l':'ê¨Æ',
    'w':'ê¨éê¨é',
    '.':'ê¨Ω',
    ';':'ê¨ª',
    ':':'',

    # some custom ones, since cleaning with .replace would be too hard
    'i': 'ê¨ç',
    'u':'ê¨è',
    'o':'ê¨ã',
    '…îÀê': 'ê¨ä',
}
AVESTAN_CLEANER = {
    '…π':'r',
    '…õ':'e',
    '…ë':'a',
    '√¶':'a',
    '·µª':'…™',
    ' å':'…ô:',
    '…ê':'a',
    '…ú':'e',
    '…ö':'…ôr',
    '…æ':'d', # trilled R already used for rhotic, so flap to d, I guess
    'nÃ©':'n',
    ' î':'', # no good glottal stop representation
    '?':'',
    ',':'',
    '!':'',
}
AVESTAN_KEEPABLE = frozenset({
    '"', '\'', 'ê¨∫', ' '
})

GEORGIAN_CLEANER = {
    '…ö':'…ôr',
    '…π':'r',
    '…ú':'…õr',
    ' å':'…ô',
    '…™':'i',
    ' ä':'u',
    '…ê':'a',
    '·µª':'i',
    '≈ã':'ng',
    '…æ':'d',
    'Àê':'',
}
GEORGIAN_IPA = {
    'a':'·Éê',
    '√¶':'·Éê',
    '…ë':'·Éê',
    'b':'·Éë',
    'd':'·Éì',
    'dz':'·É´',
    'd í':'·ÉØ',
    'e':'·É±',
    'e…™':'·É±',
    '…ô':'·É∑',
    '…õ':'·Éî',
    'f':'·É∂',
    'g':'·Éí', # not a regular G--is the IPA G, different codepoint
    'g':'·Éí',
    '…£':'·É¶',
    'h':'·É∞',
    'i':'·Éò',
    'j':'·É≤',
    'je':'·É≤',
    'k':'·É•',
    'k ∞':'·É•',
    'k º':'·Éô',
    'l':'·Éö',
    'm':'·Éõ',
    'n':'·Éú',
    'o':'·Éµ',
    '≈ì':'·Éù',
    '…î':'·Éù',
    'p ∞':'·É§',
    'p º':'·Éû',
    'p':'·É§',
    'Œ∏':'·É¥', # originally qh
    '√∞':'·Éß', # originally q'
    'r':'·É†',
    's':'·É°',
    ' É':'·É®',
    't':'·Éó',
    'ts ∞':'·É™',
    'ts º':'·É¨',
    't É ∞':'·É©',
    't É º':'·É≠',
    # 't':'·É¢',
    'u':'·É£',
    'ui':'·É≥',
    'v':'·Éï',
    'w':'·É≥',
    'y':'·É£',
    'z':'·Éñ',
    ' í':'·Éü',
    ' î':'·É∏',
    'œá':'·ÉÆ',
}
GEORGIAN_KEEPABLE = frozenset({'.', ',', ':', ';', '?', '!', ' '})

TIFINAGH_CLEANER = {
    ':':'',
    '·µª':'i',
    '…π':'r',
    '…ê':'a',
    '…ú':'er',
    '…æ':'d',
    '…õ':'e',
    '…ö':'er',
    '…™':'i',
    '…î':'o',
    '…ë':'a',
    ' î':'',
    '!':'.', # looks too much like ng letter
    'Àê':''
}
TIFINAGH_IPA = {
    '√¶':'‚¥∞',
    'b':'‚¥±',
    # 'b':'‚µÄ', # tuareg yab
    'd':'‚¥∑',
    '√∞':'‚¥∏',
    'dÕ° í':'‚¥µ',
    'dÕ° í':'‚¥∂',
    'dÀ§':'‚¥π',
    '√∞À§':'‚¥∫',
    'e':'‚µ¶',
    '…ô':'‚¥ª',
    'f':'‚¥º',
    'g':'‚¥≥',
    '…£':'‚¥¥',
    ' å':'‚µñ', # originally …£
    # '…£':'‚µó',
    ' ä':'‚µò', # originally …£
    # 'h':'‚µÅ',
    'h':'‚µÇ',
    # 'h':'‚µÄ',
    'ƒß':'‚µÉ',
    'i':'‚µâ',
    'j':'‚µ¢',
    'k':'‚¥Ω',
    'k':'‚¥æ',
    'l':'‚µç',
    'm':'‚µé',
    'n':'‚µè',
    'nj':'‚µê',
    '≈ã':'‚µë',
    'o':'‚µß',
    'p':'‚µí',
    'q':'‚µá',
    'q':'‚µà',
    'r':'‚µî',
    'rÀ§':'‚µï',
    's':'‚µô',
    'sÀ§':'‚µö',
    ' É':'‚µõ',
    't':'‚µú',
    'tÕ° É':'‚µû',
    'tÀ§':'‚µü',
    'v':'‚µ†',
    'u':'‚µì', # originally w
    'w':'‚µ°',
    ' ∑':' ‚µØ',
    'x':'‚¥ø',
    'z':'‚µ£',
    # 'z':'‚µ§',
    'zÀ§':'‚µ•',
    # ' í':'‚µä',
    # ' í':'‚µã',
    # ' í':'‚µå',
    ' í':'‚µò',
    'a':'‚µÑ', # originally  ï
    'Œ≤':'‚¥≤',
    'Œ∏':'‚µù',
     'œá':'‚µÜ',
     # 'œá':'‚µÖ',
}
TIFINAGH_KEEPABLE = frozenset(
    {'.', ',', ';', '?', ' '}
)

ELDER_FUTHARK_IPA = {
    'f':'·ö†',
    'u':'·ö¢',
    '√∞':'·ö¶',
    'Œ∏':'·ö¶',
    'a':'·ö®',
    'r':'·ö±',
    'k':'·ö≤',
    'g':'·ö∑',
    'w':'·öπ',
    # 'h':'·ö∫',
    'h':'·öª',
    'n':'·öæ',
    'i':'·õÅ',
    'j':'·õÉ',
    '√¶':'·õá',
    'p':'·õà',
    'z':'·õâ',
    # 's':'·õä',
    's':'·õã',
    't':'·õè',
    'b':'·õí',
    'e':'·õñ',
    'm':'·õó',
    'l':'·õö',
    # '≈ã':'·õú',
    '≈ã':'·õù',
    'd':'·õû',
    'o':'·õü',
}
ELDER_FUTHARK_CLEANER = {
    'Àê':'',
    '…ö':'er',
    '…π':'r',
    '…ú':'er',
    ' å':'u',
    '…™':'i',
    ' ä':'u',
    '…ê':'a',
    '·µª':'i',
    '≈ã':'ng',
    '…æ':'d',
    '…ë':'a',
    '…õ':'e',
    '…ô':'e',
    ' î':'',
    'v':'f',
    ' í':'zh',
    ' É':'sh',
    '…î':'a',
}
ELDER_FUTHARK_KEEPABLE = frozenset({';', '!', '?', ':', '.', ','})

MEDEIVAL_RUNES_IPA = {
    'a':'·õÜ',
    'b':'·õí',
    'c':'·õç',
    'd':'·õë',
    'e':'·õÇ',
    'f':'·ö†',
    'g':'·öµ',
    'h':'·öº',
    'i':'·õÅ',
    'k':'·ö¥',
    'l':'·õö',
    'm':'·õò',
    'n':'·öø',
    'o':'·öÆ',
    # 'p':'·õï',
    'p':'·õî',
    'q':'·õ©',
    'r':'·ö±',
    's':'·õã',
    't':'·õê',
    'u':'·ö¢',
    'v':'·ö°',
    # 'v':'·ö¢',
    'w':'·ö•',
    'x':'·õ™',
    # 'y':'·ö§',
    'y':'·õ®',
    # 'y':'·õ¶',
    'z':'·õé',
    'th':'·ö¶',
}
MEDEIVAL_RUNES_CLEANER = {
    'j':'i',
}
MEDEIVAL_RUNES_KEEPABLE = frozenset({';', '!', '?', ':', '.', ',', '-'})

MONGOLIAN_IPA = {
    'a':'·††',
    'e':'·†°',
    'i':'·†¢',
    'o':'·†£',
    ' ä':'·†§',
    '…µ':'·†•',
    'u':'·†¶',
    'e:':'·†ß',
    'n':'·†®',
    '≈ã':'·†©',
    'b':'·†™',
    'p':'·†´',
    'œá':'·†¨',
    'g':'·†≠', # originally …¢
    'm':'·†Æ',
    'l':'·†Ø',
    's':'·†∞',
    ' É':'·†±',
    't':'·†≤',
    'd':'·†≥',
    'tÕ° É':'·†¥',
    'dÕ° í':'·†µ',
    'j':'·†∂',
    'r':'·†∑',
    'w':'·†∏',
    'f':'·†π',
    'k':'·†∫',
    'k':'·†ª',
    'tÕ°s':'·†º',
    'dÕ°z':'·†Ω',
    'h':'·†æ', # originally x
    '…π':'·†ø',
    '…¨':'·°Ä',
    '√∞':'·°Å', # originally …ñÕ° ê
    'Œ∏':'·°Ç', # originally  àÕ° Ç ∞
    ':':'·°É',
    ' í':'·°≤', # sibe script
    'z':'·°Ø', # sibe script
    'v':'·°´', # sibe fa
    '…õ':'·°Ñ', # todo e
    '…™':'·°Ö', # todo i
    ' å':'·°á',# todo u
    '‚Ä¶':'·†Å',
    ',':'·†Ç',
    '.':'·†É',
    ':':'·†Ñ',
    '-':'·†Ü',
}
MONGOLIAN_CLEANER = {
    ';':'',
    '…ô':'…µ',
    '…ö':'…µr',
    '√¶':'a',
    'Àê':':',
    '…ë':'a',
    '…ê':'a',
    ' î':'',
    '…ú':'er',
    '·µª':'i',
    '…î':'o',
    '…æ':'d',
    '!':'',
    '?':'',
}
MONGOLIAN_KEEPABLE = frozenset({})

PHAGSPA_IPA = {
    'a':'Í°ñ',
    ' å':'Í°ù',
    'b':'Í°é',
    '√∞':'Í°´',
    'd':'Í°ä',
    'dÕ°z':'Í°í',
    'dÕ° í':'Í°Ü',
    '…õ':'Í°†',
    'e':'Í°¶',
    'f':'Í°§',
    'g':'Í°Ç',
    'h':'Í°ú',
    'i':'Í°û',
    'j':'Í°ó',
    'j':'Í°®',
    'k':'Í°Ä',
    'k‚Äô':'Í°Å',
    'l':'Í°ô',
    'm':'Í°è',
    'n:':'Í°¨',
    'n':'Í°ã',
    'nj':'Í°á',
    '≈ã':'Í°É',
    'o':'Í°°',
    'p':'Í°å',
    'p‚Äô':'Í°ç',
    'q':'Í°¢',
    'r':'Í°ò',
    's':'Í°õ',
    ' É':'Í°ö',
    't:':'Í°©',
    't':'Í°à',
    't‚Äô':'Í°â',
    'Œ∏':'Í°™',
    'tÕ°s‚Äô':'Í°ë',
    'tÕ°s':'Í°ê',
    'tsh‚Äô':'Í°Ö',
    'tÕ° É':'Í°Ñ',
    'u':'Í°ü',
    'v':'Í°ì',
    'w':'Í°ß',
    'x':'Í°£',
    'z':'Í°ï',
    ' í':'Í°î',
    ' î':'Í°•',
}
PHAGSPA_CLEANER = {
    ':':'',
    '√¶':'a',
    '…ú':'er',
    '…™':'i',
    '…π':'r',
    'Àê':'',
    '…æ':'r',
    '…î':'a',
    ' ä':'u',
    '…ë':'a',
    'a':'a',
    '…ê':'a',
    '…ô':' å',
    '…ö':'er',
    '·µª':'i',
    '.':'',
    ',':'',
    ':':'',
    ';':'',
    '!':'',
    '?':'',
}
PHAGSPA_KEEPABLE = frozenset({})

GLAGOLITIC_IPA = {
    '…ë':'‚∞Ä',
    'b':'‚∞Å',
    'w':'‚∞Ç', # originally  ã
    'g':'‚∞É',
    'd':'‚∞Ñ',
    '…õ':'‚∞Ö',
    ' í':'‚∞Ü',
    'dÕ°z':'‚∞á',
    'z':'‚∞à',
    #'j':'‚∞â',
    #'i':'‚∞â',
    #'j':'‚∞ä',
    'i':'‚∞ä',
    #'i':'‚∞ã',
    'j':'‚∞ã',
    'dÕ° ë':'‚∞å',
    'k':'‚∞ç',
    'l':'‚∞é',
    'm':'‚∞è',
    'nj':'‚∞ê',
    'n':'‚∞ê',
    '…î':'‚∞ë',
    'p':'‚∞í',
    'r':'‚∞ì',
    's':'‚∞î',
    't':'‚∞ï',
    'u':'‚∞ñ',
    'f':'‚∞ó',
    'h':'‚∞ò', # originally x
    '…î':'‚∞ô',
    '√∞':'‚∞õ', # originally tj/ Ét
    'tÕ°s':'‚∞ú',
    'tÕ° É':'‚∞ù',
    ' É':'‚∞û',
    ' å':'‚∞ü', # originally …Ø
    '·µª':'‚∞ü‚∞â',
    '…ô':'‚∞†',
    'j…ë':'‚∞°',
    '√¶':'‚∞°',
    'o':'‚∞¶', # originally jo
    'ju':'‚∞£',
    'e':'‚∞§',# originally …õÃÉ
    'j…õÃÉ':'‚∞ß',
    '…îÃÉ':'‚∞®',
    'j…îÃÉ':'‚∞©',
    'Œ∏':'‚∞™',
    '…™':'‚∞´', # originally small-Y
}
GLAGOLITIC_CLEANER = {
    '…°':'g',
    'a':'…ë',
    '…ê':'…ë',
    '…ú':'…õ',
    'Àê':'',
    '…ö':'…ôr',
    ' ä':'u',
    ' î':'',
    '…π':'r',
    'v':'w',
    '≈ã':'ng',
    '…æ':'d',
}
GLAGOLITIC_KEEPABLE = set('.,;\':"?!')

INUKTITUT_IPA = {
    # this repurposes the q and nng series and borrows from a few
    # other Canadian Aboriginal scripts to fill in othr needed
    # consonants.
    'ai':'·êÅ',
    'i':'·êÉ',
    'i:':'·êÑ',
    'u':'·êÖ',
    'u:':'·êÜ',
    'a':'·êä',
    'a:':'·êã',
    'h':'·ê¶',
    'pai':'·êØ',
    'pi':'·ê±',
    'pi:':'·ê≤',
    'pu':'·ê≥',
    'pu:':'·ê¥',
    'pa':'·ê∏',
    'pa:':'·êπ',
    'p':'·ëâ',
    'tai':'·ëå',
    'ti':'·ëé',
    'ti:':'·ëè',
    'tu':'·ëê',
    'tu:':'·ëë',
    'ta':'·ëï',
    'ta:':'·ëñ',
    't':'·ë¶',
    'kai':'·ë´',
    'ki':'·ë≠',
    'ki:':'·ëÆ',
    'ku':'·ëØ',
    'ku:':'·ë∞',
    'ka':'·ë≤',
    'ka:':'·ë≥',
    'k':'·íÉ',
    'gai':'·íâ',
    'gi':'·íã',
    'gi:':'·íå',
    'gu':'·íç',
    'gu:':'·íé',
    'ga':'·íê',
    'ga:':'·íë',
    'g':'·í°',
    'mai':'·í£',
    'mi':'·í•',
    'mi:':'·í¶',
    'mu':'·íß',
    'mu:':'·í®',
    'ma':'·í™',
    'ma:':'·í´',
    'm':'·íª',
    'nai':'·ìÄ',
    'ni':'·ìÇ',
    'ni:':'·ìÉ',
    'nu':'·ìÑ',
    'nu:':'·ìÖ',
    'na':'·ìá',
    'na:':'·ìà',
    'n':'·ìê',
    'lai':'·ìì',
    'li':'·ìï',
    'li:':'·ìñ',
    'lu':'·ìó',
    'lu:':'·ìò',
    'la':'·ìö',
    'la:':'·ìõ',
    'l':'·ì™',
    'sai':'·ì≠',
    'si':'·ìØ',
    'si:':'·ì∞',
    'su':'·ì±',
    'su:':'·ì≤',
    'sa':'·ì¥',
    'sa:':'·ìµ',
    's':'·îÖ',
    ' Éai':'·îê',
    ' ÉI':'·îë',
    ' Éi:':'·îí',
    ' Éu':'·îì',
    ' Éu:':'·îî',
    ' Éa:':'·îï',
    ' Éa:':'·îñ',
    ' É':'·î•',
    'jai':'·î¶',
    'ji':'·î®',
    'ji:':'·î©',
    'ju':'·î™',
    'ju:':'·î´',
    'ja':'·î≠',
    'ja:':'·îÆ',
    'j':'·îæ',
    'rai':'·ïÉ',
    'ri':'·ïÜ',
    'ri:':'·ïá',
    'ru':'·ïà',
    'ru:':'·ïâ',
    'ra':'·ïã',
    'ra:':'·ïå',
    'r':'·ïê',
    'vai':'·ïì',
    'vi':'·ïï',
    'vi:':'·ïñ',
    'vu':'·ïó',
    'vu:':'·ïò',
    'va':'·ïô',
    'va:':'·ïö',
    'v':'·ïù',
    '√∞ai':'·ïû',
    '√∞i':'·ï†',
    '√∞i:':'·ï¢',
    '√∞u':'·ï§',
    '√∞u:':'·ï•',
    '√∞a':'·ï¶',
    '√∞a:':'·ïß',
    '√∞':'·ï™',
    ' íai':'·ôØ',
    ' íi':'·ïø',
    ' íi:':'·ñÄ',
    ' íu':'·ñÅ',
    ' íu:':'·ñÇ',
    ' ía':'·ñÉ',
    ' ía:':'·ñÑ',
    ' í':'·ñÖ',
    '≈ãai':'·ô∞',
    '≈ãi':'·ñè',
    '≈ãi:':'·ñê',
    '≈ãu':'·ñë',
    '≈ãu:':'·ñí',
    '≈ãa':'·ñì',
    '≈ãa:':'·ñî',
    '≈ã':'·ñï',
    'wi':'·ô±',
    'wi:':'·ô≤',
    'wu':'·ô≥',
    'wu:':'·ô¥',
    'wa':'·ôµ',
    'wa:':'·ô∂',
    'w':'·ññ',
    '≈Çi':'·ñ†',
    '≈Çi:':'·ñ°',
    '≈Çu':'·ñ¢',
    '≈Çu:':'·ñ£',
    '≈Ça':'·ñ§',
    '≈Ça:':'·ñ•',
    '≈Ç':'·ñ¶',
    'Œ∏ai':'·ñß',
    'Œ∏i:':'·ñ®',
    'Œ∏i:':'·ñ©',
    'Œ∏u':'·ñ™',
    'Œ∏u:':'·ñ´',
    'Œ∏a':'·ñ¨',
    'Œ∏a:':'·ñ≠',
    'Œ∏':'·ñÆ',
}
INUKTITUT_CLEANER = {
    'g':'k',
    'd':'t',
    'w':'v',
    'f':'v',
    'b':'p',
    '√¶':'a',
    '…ê':'a',
    '…ë':'a',
    '…î':'a',
    '…ô':'a',
    '…ö':'ar',
    '…π':'r',
    '…æ':'r',
    ' ä':'u',
    ' å':'a',
    '·µª':'i',
    '…™':'i',
    '…õ':'i',
    '…ú':'i',
    'e':'i',
    'o':'u',
    ' î':'',
    '‚ÅÄ':'',
    'Àê':':',
    'z':'s',
}
INUKTITUT_KEEPABLE = set(",.?!'\";")


# collect languages into a dict to more programmatically reference
# them later
IPAS = {i.rsplit('_', maxsplit=1,)[0].lower():globals()[i] for i in globals() if i.endswith('_IPA')}
CLEANERS = {i.rsplit('_', maxsplit=1,)[0].lower():globals()[i] for i in globals() if i.endswith('_CLEANER')}
KEEPABLES = {i.rsplit('_', maxsplit=1,)[0].lower():globals()[i] for i in globals() if i.endswith('_KEEPABLE')}
